import{s as Y,F as r,a as N,m as F}from"./main-04baad83.js";import{a as ee,c as B,h as te,G as $,M as G,$ as e,t as D,T as ae}from"./DarkTheme-7d442e55.js";const k={analyticsChanges:{}};k.initialize=function(U){const m=this,y=[{name:"MSP",groups:["configuration","msp"],maxPorts:2},{name:"GPS",groups:["sensors"],maxPorts:1},{name:"TELEMETRY_FRSKY",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_HOTT",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_SMARTPORT",groups:["telemetry"],maxPorts:1},{name:"RX_SERIAL",groups:["rx"],maxPorts:1},{name:"BLACKBOX",groups:["peripherals"],sharableWith:["msp"],notSharableWith:["telemetry"],maxPorts:1},{name:"TELEMETRY_LTM",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_MAVLINK",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"IRC_TRAMP",groups:["peripherals"],maxPorts:1},{name:"ESC_SENSOR",groups:["sensors"],maxPorts:1},{name:"TBS_SMARTAUDIO",groups:["peripherals"],maxPorts:1},{name:"TELEMETRY_IBUS",groups:["telemetry"],maxPorts:1},{name:"RUNCAM_DEVICE_CONTROL",groups:["peripherals"],maxPorts:1},{name:"LIDAR_TF",groups:["peripherals"],maxPorts:1},{name:"FRSKY_OSD",groups:["peripherals"],maxPorts:1}];Y.gte(r.CONFIG.apiVersion,ee)&&y.push({name:"VTX_MSP",groups:["peripherals"],sharableWith:["msp"],maxPorts:1});for(const c of y)c.displayName=B.getMessage(`portsFunction_${c.name}`);let K=["9600","19200","38400","57600","115200","230400","250000","500000","1000000"];const V=["AUTO","9600","19200","38400","57600","115200"],w=["AUTO","9600","19200","38400","57600","115200"],H=["AUTO","19200","38400","57600","115200","230400","250000","1500000","2000000","2470000"];Y.gte(r.CONFIG.apiVersion,te)&&V.push("230400");const X=["configuration","peripherals","sensors","telemetry","rx"];$.active_tab="ports",z();function z(){G.promise(N.MSP_VTX_CONFIG).then(function(){F.loadSerialConfig(c)});function c(){e("#content").load("./tabs/ports.html",q)}}function j(){m.analyticsChanges={},e(".tab-ports").addClass("supported");const c=20,x={0:"UART1",1:"UART2",2:"UART3",3:"UART4",4:"UART5",5:"UART6",6:"UART7",7:"UART8",8:"UART9",9:"UART10",20:"USB VCP",30:"SOFTSERIAL1",31:"SOFTSERIAL2",40:"LPUART1",50:"UART0",51:"UART1",52:"UART2",53:"UART3",54:"UART4",55:"UART5",56:"UART6",57:"UART7",58:"UART8",59:"UART9",60:"UART10"};let _=e("select.gps_baudrate");for(const t of V)_.append(`<option value="${t}">${t}</option>`);let b=e("select.msp_baudrate");for(const t of K)b.append(`<option value="${t}">${t}</option>`);let h=e("select.telemetry_baudrate");for(const t of w)h.append(`<option value="${t}">${t}</option>`);let o=e("select.blackbox_baudrate");for(const t of H)o.append(`<option value="${t}">${t}</option>`);let C,I;const O=e(".tab-ports .ports"),n=e("#tab-ports-templates .portIdentifier"),P=e("#tab-ports-templates .portConfiguration");for(let t=0;t<r.SERIAL_CONFIG.ports.length;t++){const p=n.clone(),s=P.clone(),a=r.SERIAL_CONFIG.ports[t];s.data("serialPort",a),b=s.find("select.msp_baudrate"),b.val(a.msp_baudrate),h=s.find("select.telemetry_baudrate"),h.val(a.telemetry_baudrate);let i;a.functions.indexOf("GPS")>=0?i=a.gps_baudrate:i="AUTO",_=s.find("select.gps_baudrate"),_.val(i);let R;a.functions.indexOf("BLACKBOX")>=0?R=a.blackbox_baudrate:R="AUTO",o=s.find("select.blackbox_baudrate"),o.val(R),p.find(".identifier").text(x[a.identifier]),s.find(".identifier").text(x[a.identifier]),s.data("index",t),s.data("port",a);for(let S=0;S<X.length;S++){const u=X[S],g=e(s).find(`.functionsCell-${u}`);for(let M=0;M<y.length;M++){const L=y[M],l=L.name;if(L.groups.indexOf(u)===-1)continue;let f;if(u!=="telemetry"&&u!=="sensors"&&u!=="peripherals"){const d=`functionCheckbox-${t}-${S}-${M}`;let v='<span class="function"><input type="checkbox" class="togglemedium" id=';if(v+=`"${d}" value="${l}" /><label for="${d}"></label></span>`,g.prepend(v),a.functions.indexOf(l)>=0&&g.find(`#${d}`).prop("checked",!0),a.identifier===c&&l==="MSP"){const A=g.find(`#${d}`);A.prop("checked",!0),A.prop("disabled",!0)}}else{const d=`function-${u}`,v=`select[name=${d}]`;f=g.find(v);const A=B.getMessage("portsTelemetryDisabled");if(f.length===0&&(g.prepend(`<span class="function"><select name="${d}" /></span>`),f=g.find(v),f.append(`<option value="">${A}</option>`)),f.append(`<option value="${l}">${L.displayName}</option>`),f.sortSelect(A),a.functions.indexOf(l)>=0&&(f.val(l),u==="peripherals"&&(l==="TBS_SMARTAUDIO"||l==="IRC_TRAMP")&&(C=l),u==="peripherals"&&l.includes("MSP")&&(I=l)),u==="telemetry"){const Q=l;f.on("change",function(){const Z=e(this).val();let W;Z!==Q&&(W=e(this).find("option:selected").text()),m.analyticsChanges.Telemetry=W})}}}}O.find("tbody").append(p),O.find("tbody").append(s)}const T=r.VTX_CONFIG.vtx_table_available&&(r.VTX_CONFIG.vtx_table_bands===0||r.VTX_CONFIG.vtx_table_channels===0||r.VTX_CONFIG.vtx_table_powerlevels===0),E=e('select[name="function-peripherals"]');E.on("change",function(){let t,p;E.each(function(s,a){const i=e(a).val();(i==="TBS_SMARTAUDIO"||i==="IRC_TRAMP")&&(t=i),i.includes("MSP")&&(p=i,e(".tab-ports .portConfiguration").each(function(R,S){e(S).find("select[name=function-peripherals]").val().includes("MSP")&&s===R&&e(`#functionCheckbox-${R}-0-0`).prop("checked",!0).trigger("change")}))}),C!==t&&(m.analyticsChanges.VtxControl=t,C=t),I!==p&&(m.analyticsChanges.MspControl=p,I=p),e(".vtxTableNotSet").toggle(t&&T)}),E.trigger("change")}function q(){B.localizePage(),j(),e("a.save").on("click",J),$.interval_add("status_pull",function(){G.send_message(N.MSP_STATUS)},250,!0),$.content_ready(U)}function J(){D.sendSaveAndChangeEvents(D.EVENT_CATEGORIES.FLIGHT_CONTROLLER,m.analyticsChanges,"ports"),m.analyticsChanges={},r.SERIAL_CONFIG.ports=[],e(".tab-ports .portConfiguration").each(function(O,n){const P=e(n).data("serialPort"),T=e(n).find("input:checkbox:checked").map(function(){return this.value}).get(),E=e(n).find("select[name=function-telemetry]").val();E&&T.push(E);const t=e(n).find("select[name=function-sensors]").val();t&&T.push(t);const p=e(n).find("select[name=function-peripherals]").val();p&&T.push(p);let s=e(n).find(".gps_baudrate").val();s==="AUTO"&&(s="57600");let a=e(n).find(".blackbox_baudrate").val();a==="AUTO"&&(a="115200");const i={functions:T,msp_baudrate:e(n).find(".msp_baudrate").val(),telemetry_baudrate:e(n).find(".telemetry_baudrate").val(),gps_baudrate:s,blackbox_baudrate:a,identifier:P.identifier};r.SERIAL_CONFIG.ports.push(i)});let c=!1,x=!1,_=!1,b=!1,h=!1;for(const O of r.SERIAL_CONFIG.ports){const n=O.functions;n.includes("RX_SERIAL")&&(c=!0),n.some(P=>P.startsWith("TELEMETRY"))&&(x=!0),n.includes("BLACKBOX")&&(_=!0),n.includes("ESC_SENSOR")&&(b=!0),n.includes("GPS")&&(h=!0)}const o=r.FEATURE_CONFIG.features;c?o.enable("RX_SERIAL"):o.disable("RX_SERIAL"),x&&o.enable("TELEMETRY"),_?o.enable("BLACKBOX"):o.disable("BLACKBOX"),b?o.enable("ESC_SENSOR"):o.disable("ESC_SENSOR"),h?o.enable("GPS"):o.disable("GPS"),F.sendSerialConfig(C);function C(){G.send_message(N.MSP_SET_FEATURE_CONFIG,F.crunch(N.MSP_SET_FEATURE_CONFIG),!1,I)}function I(){F.writeConfiguration(!0)}}};k.cleanup=function(U){U&&U()};ae.ports=k;export{k as ports};
