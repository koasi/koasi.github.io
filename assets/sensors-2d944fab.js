import{G as S,$ as t,c as de,f as L,A as _e,M as v,d as W,T as ue}from"./DarkTheme-59411532.js";import{F as r,l as E,s as ge,a as N}from"./main-7461ba9d.js";import{l as j,a as J,b as K,c as fe,s as pe}from"./transform-8625d4bb.js";import{D as Q}from"./debug-291d0afa.js";import{e as he}from"./extent-4cf1c809.js";function me(x,T){let d;if(T===void 0)for(const _ of x)_!=null&&(d<_||d===void 0&&_>=_)&&(d=_);else{let _=-1;for(let g of x)(g=T(g,++_,x))!=null&&(d<g||d===void 0&&g>=g)&&(d=g)}return d}const p={};p.initialize=function(x){S.active_tab!="sensors"&&(S.active_tab="sensors");function T(){for(let e=0;e<3;e++)r.SENSOR_DATA.accelerometer[e]=0,r.SENSOR_DATA.gyroscope[e]=0,r.SENSOR_DATA.magnetometer[e]=0,r.SENSOR_DATA.sonar=0,r.SENSOR_DATA.altitude=0;for(let e=0;e<p.debugColumns;e++)r.SENSOR_DATA.debug[e]=0}function d(e){const n=new Array(e);for(let o=0;o<e;o++)n[o]=new Array,n[o].min=-1,n[o].max=1;return n}function _(e,n,o){for(let s=0;s<e.length;s++){const i=o[s];e[s].push([n,i]),i<e[s].min&&(e[s].min=i),i>e[s].max&&(e[s].max=i)}for(;e[0].length>300;)for(let s=0;s<e.length;s++)e[s].shift();return n+1}const g={top:20,right:10,bottom:10,left:40};function A(e){e.width=e.targetElement.width()-g.left-g.right,e.height=e.targetElement.height()-g.top-g.bottom,e.widthScale.range([0,e.width]),e.heightScale.range([e.height,0]),e.xGrid.tickSize(-e.height,0,0),e.yGrid.tickSize(-e.width,0,0)}function h(e,n,o){const s={selector:e,targetElement:t(e),dynamicHeightDomain:!o};return s.widthScale=j().clamp(!0).domain([n-299,n]),s.heightScale=j().clamp(!0).domain(o||[1,-1]),s.xGrid=J(),s.yGrid=K(),A(s),s.xGrid.scale(s.widthScale).ticks(5).tickFormat(""),s.yGrid.scale(s.heightScale).ticks(5).tickFormat(""),s.xAxis=J().scale(s.widthScale).ticks(5).tickFormat(function(i){return i}),s.yAxis=K().scale(s.heightScale).ticks(5).tickFormat(function(i){return i}),s.line=fe().x(function(i){return s.widthScale(i[0])}).y(function(i){return s.heightScale(i[1])}),s}function D(e,n,o){const s=pe(e.selector);if(e.dynamicHeightDomain){const m=[];t.each(n,function(w,O){m.push(O.min),m.push(O.max)}),e.heightScale.domain(he(m))}e.widthScale.domain([o-299,o]),s.select(".x.grid").call(e.xGrid),s.select(".y.grid").call(e.yGrid),s.select(".x.axis").call(e.xAxis),s.select(".y.axis").call(e.yAxis);const y=s.select("g.data").selectAll("path").data(n,function(m,w){return w});y.enter().append("path").attr("class","line"),y.attr("d",e.line)}function X(e){e?t(".wrapper.gyro").show():t(".wrapper.gyro").hide()}function Y(e){e?t(".wrapper.accel").show():t(".wrapper.accel").hide()}function Z(e){e?t(".wrapper.mag").show():t(".wrapper.mag").hide()}function ee(e){e?t(".wrapper.altitude").show():t(".wrapper.altitude").hide()}function te(e){e?t(".wrapper.sonar").show():t(".wrapper.sonar").hide()}function se(e){e?t(".wrapper.debug").show():t(".wrapper.debug").hide()}function ae(){const e=Q.modes[r.PID_ADVANCED_CONFIG.debugMode],n=Q.fieldNames[e];for(let o=0;o<p.debugColumns;o++){let s=`Debug ${o} unknown`;n&&(s=n[`debug[${o}]`]??`Debug ${o} not used`),t(`.plot_control.debug${o}`).children(".title").text(s)}}t("#content").load("./tabs/sensors.html",function(){de.localizePage();let n=t(".tab-sensors .info .checkboxes input");if(n.parent().show(),r.CONFIG.boardType==0||r.CONFIG.boardType==2)E(r.CONFIG.activeSensors,"acc")||n.eq(1).prop("disabled",!0),E(r.CONFIG.activeSensors,"mag")||n.eq(2).prop("disabled",!0),E(r.CONFIG.activeSensors,"baro")||E(r.CONFIG.activeSensors,"gps")||n.eq(3).prop("disabled",!0),E(r.CONFIG.activeSensors,"sonar")||n.eq(4).prop("disabled",!0);else for(let a=0;a<=4;a++)n.eq(a).prop("disabled",!0),n.eq(a).parent().hide();if(t(".tab-sensors .info .checkboxes input").change(function(){const a=t(this).prop("checked");switch(t(this).parent().index()){case 0:X(a);break;case 1:Y(a);break;case 2:Z(a);break;case 3:ee(a);break;case 4:te(a);break;case 5:se(a);break}const b=[];t(".tab-sensors .info .checkboxes input").each(function(){b.push(t(this).prop("checked"))}),t(".tab-sensors .rate select:first").change(),L({graphs_enabled:b})}),ge.gte(r.CONFIG.apiVersion,_e))p.debugColumns=8,v.send_message(N.MSP_ADVANCED_CONFIG,!1,!1,ae);else{p.debugColumns=4;for(let a=4;a<8;a++)t(`svg#debug${a}`).hide(),t(`div.plot_control.debug${a}`).hide()}T();let o=0,s=0,i=0,y=0,m=0,w=0;const O=d(3),$=d(3),z=d(3),q=d(1),U=d(1),k=[];for(let a=0;a<p.debugColumns;a++)k.push(d(1));let F=h("#gyro",o,[-2e3,2e3]),C=h("#accel",s,[-2,2]),R=h("#mag",i,[-1,1]);const B=h("#altitude",y),V=h("#sonar",m),G=[];for(let a=0;a<p.debugColumns;a++)G.push(h(`#debug${a}`,w));const c={x:[],y:[],z:[]};t(".plot_control .x, .plot_control .y, .plot_control .z").each(function(){const a=t(this);a.hasClass("x")?c.x.push(a):a.hasClass("y")?c.y.push(a):c.z.push(a)}),t(".tab-sensors .rate select, .tab-sensors .scale select").change(function(){const a={gyro:parseInt(t('.tab-sensors select[name="gyro_refresh_rate"]').val(),10),accel:parseInt(t('.tab-sensors select[name="accel_refresh_rate"]').val(),10),mag:parseInt(t('.tab-sensors select[name="mag_refresh_rate"]').val(),10),altitude:parseInt(t('.tab-sensors select[name="altitude_refresh_rate"]').val(),10),sonar:parseInt(t('.tab-sensors select[name="sonar_refresh_rate"]').val(),10),debug:parseInt(t('.tab-sensors select[name="debug_refresh_rate"]').val(),10)},u={gyro:parseFloat(t('.tab-sensors select[name="gyro_scale"]').val()),accel:parseFloat(t('.tab-sensors select[name="accel_scale"]').val()),mag:parseInt(t('.tab-sensors select[name="mag_scale"]').val(),10)};let b;["gyro_refresh_rate","accel_refresh_rate","mag_refresh_rate"].includes(t(this).attr("name"))?(b=t(this).val(),t('.tab-sensors select[name="gyro_refresh_rate"]').val(b),t('.tab-sensors select[name="accel_refresh_rate"]').val(b),t('.tab-sensors select[name="mag_refresh_rate"]').val(b)):b=me([a.gyro,a.accel,a.mag]),L({sensor_settings:{rates:a,scales:u}}),F=h("#gyro",o,[-u.gyro,u.gyro]),C=h("#accel",s,[-u.accel,u.accel]),R=h("#mag",i,[-u.mag,u.mag]),n=[],t(".tab-sensors .info .checkboxes input").each(function(){n.push(t(this).prop("checked"))}),S.interval_kill_all(["status_pull"]),(n[0]||n[1]||n[2])&&S.interval_add("IMU_pull",function(){v.send_message(N.MSP_RAW_IMU,!1,!1,ne)},b,!0),n[3]&&S.interval_add("altitude_pull",function(){v.send_message(N.MSP_ALTITUDE,!1,!1,re)},a.altitude,!0),n[4]&&S.interval_add("sonar_pull",function(){v.send_message(N.MSP_SONAR,!1,!1,oe)},a.sonar,!0),n[5]&&S.interval_add("debug_pull",function(){v.send_message(N.MSP_DEBUG,!1,!1,ie)},a.debug,!0);function ne(){if(n[0]&&(A(F),o=_(O,o,r.SENSOR_DATA.gyroscope),D(F,O,o),c.x[0].text(r.SENSOR_DATA.gyroscope[0].toFixed(2)),c.y[0].text(r.SENSOR_DATA.gyroscope[1].toFixed(2)),c.z[0].text(r.SENSOR_DATA.gyroscope[2].toFixed(2))),n[1]){A(C),s=_($,s,r.SENSOR_DATA.accelerometer),D(C,$,s);const l=r.SENSOR_DATA.accelerometer[0].toFixed(2),M=r.SENSOR_DATA.accelerometer[1].toFixed(2),P=r.SENSOR_DATA.accelerometer[2].toFixed(2),H=Math.PI,le=Math.round(Math.atan(M/(Math.sqrt(Math.pow(l,2))+Math.pow(P,2)))*(180/H)),ce=Math.round(Math.atan(l/(Math.sqrt(Math.pow(M,2))+Math.pow(P,2)))*(180/H));c.x[1].text(`${l} (${le})`),c.y[1].text(`${M} (${ce})`),c.z[1].text(`${P}`)}n[2]&&(A(R),i=_(z,i,r.SENSOR_DATA.magnetometer),D(R,z,i),c.x[2].text(r.SENSOR_DATA.magnetometer[0].toFixed(0)),c.y[2].text(r.SENSOR_DATA.magnetometer[1].toFixed(0)),c.z[2].text(r.SENSOR_DATA.magnetometer[2].toFixed(0)))}function re(){A(B),y=_(q,y,[r.SENSOR_DATA.altitude]),D(B,q,y),c.x[3].text(r.SENSOR_DATA.altitude.toFixed(2))}function oe(){A(V),m=_(U,m,[r.SENSOR_DATA.sonar]),D(V,U,m),c.x[4].text(r.SENSOR_DATA.sonar.toFixed(2))}function ie(){for(let l=0;l<p.debugColumns;l++)A(G[l]),_(k[l],w,[r.SENSOR_DATA.debug[l]]),D(G[l],k[l],w),c.x[5+l].text(r.SENSOR_DATA.debug[l]);w++}});const f=W("sensor_settings");f.sensor_settings?(t('.tab-sensors select[name="gyro_refresh_rate"]').val(f.sensor_settings.rates.gyro),t('.tab-sensors select[name="gyro_scale"]').val(f.sensor_settings.scales.gyro),t('.tab-sensors select[name="accel_refresh_rate"]').val(f.sensor_settings.rates.accel),t('.tab-sensors select[name="accel_scale"]').val(f.sensor_settings.scales.accel),t('.tab-sensors select[name="mag_refresh_rate"]').val(f.sensor_settings.rates.mag),t('.tab-sensors select[name="mag_scale"]').val(f.sensor_settings.scales.mag),t('.tab-sensors select[name="altitude_refresh_rate"]').val(f.sensor_settings.rates.altitude),t('.tab-sensors select[name="sonar_refresh_rate"]').val(f.sensor_settings.rates.sonar),t('.tab-sensors select[name="debug_refresh_rate"]').val(f.sensor_settings.rates.debug),t(".tab-sensors .rate select:first").change()):t(".tab-sensors .rate select:first").change();const I=W("graphs_enabled");if(I.graphs_enabled){const a=t(".tab-sensors .info .checkboxes input");for(let u=0;u<I.graphs_enabled.length;u++)a.eq(u).not(":disabled").prop("checked",I.graphs_enabled[u]).change()}else t(".tab-sensors .info input:lt(4):not(:disabled)").prop("checked",!0).change();S.interval_add("status_pull",function(){v.send_message(N.MSP_STATUS)},250,!0),S.content_ready(x)})};p.cleanup=function(x){x&&x()};ue.sensors=p;export{p as sensors};
